name: Template Testing Qemu Mono

on:
  workflow_call:
    inputs:
      target_framework:
        required: true
        type: string
      build_configuration:
        required: true
        type: string
      run_settings_args:
        required: true
        type: string
      upload_tests:
        required: false
        type: boolean
        default: true

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  ubuntu-mono-arm64:
    name: Mono ubuntu-arm64 ${{ inputs.target_framework }} ${{ inputs.build_configuration }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Build Cache
        uses: actions/download-artifact@v4
        with:
          name: build-output-ubuntu-${{inputs.build_configuration}}
          path: HarmonyTests/bin/

      - uses: uraimo/run-on-arch-action@v2.7.1
        name: Test .NET
        id: build
        with:
          arch: aarch64
          distro: ubuntu22.04
          
          dockerRunArgs: |
            --volume "${PWD}/src:/src"
          
          shell: /bin/bash
          
          install: |
            apt-get update
            apt-get install -y wget mono-devel
            
            wget https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh;
            chmod +x dotnet-install.sh;
            ./dotnet-install.sh --channel STS;
            ./dotnet-install.sh --channel LTS;
            ./dotnet-install.sh --channel ${{env.channel}};
          
          run: |
            dotnet test "HarmonyTests/bin/Release/${{inputs.target_framework}}/HarmonyTests.dll" -f ${{inputs.target_framework}} -l trx -l "console;verbosity=normal" --blame -- ${{inputs.run_settings_args}};


      - name: Test .NET
        run: |

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: ${{inputs.upload_tests && (success() || failure())}}
        with:
          name: test-results-mono-ubuntu-arm64-${{inputs.target_framework}}-${{inputs.build_configuration}}
          path: '**/*.trx'
