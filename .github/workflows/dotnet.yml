name: Unix .NET

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      architecture:
        required: true
        type: string
      target_framework:
        required: true
        type: string
      build_configuration:
        required: true
        type: string

jobs:
  unix-net:
    name: .NET ${{ inputs.image }}-${{ inputs.architecture }} ${{ inputs.target_framework }} ${{ inputs.build_configuration }}
    runs-on: ${{inputs.image}}
    env:
      run_settings_args: 'NUnit.DefaultTestNamePattern="{C}:{m}{a}" RunConfiguration.TargetPlatform=${{inputs.architecture}}'
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Sdk
        uses: actions/setup-dotnet@v3

      - name: Setup .NET Windows
        if: startsWith(${{ inputs.image }}, 'windows')
        run: |
          Invoke-WebRequest 'https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1' -OutFile dotnet-install.ps1;
          $channel = '${{inputs.target_framework}}'.Replace('coreapp', '').Replace('net', '');
          .\dotnet-install.ps1 -Channel $channel -Architecture ${{inputs.architecture}} -Runtime dotnet -InstallDir "${Env:ProgramFiles(x86)}\dotnet" -NoPath
        shell: pwsh
        
      - name: Setup .NET Ubuntu/MacOS
        if: startsWith(${{ inputs.image }}, 'ubuntu') || startsWith(${{ inputs.image }}, 'macos')
        run: |
          Invoke-WebRequest 'https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1' -OutFile dotnet-install.ps1;
          $channel = '${{inputs.target_framework}}'.Replace('coreapp', '').Replace('net', '');
          .\dotnet-install.ps1 -Channel $channel -Architecture ${{inputs.architecture}} -Runtime dotnet -InstallDir "${Env:HOME}/.dotnet"
        shell: pwsh

      - name: Build
        run: |
          dotnet build -c ${{inputs.build_configuration}} -f ${{inputs.target_framework}} Harmony.sln

      - name: Test .NET
        run: |
          dotnet test Harmony.sln --no-build --configuration ${{inputs.build_configuration}} --framework ${{inputs.target_framework}} --logger "console;verbosity=normal" --blame -- ${{env.run_settings_args}}
