name: Perform Testing

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  windows-dotnet:
    name: Windows .NET x86/x64
    strategy:
      matrix:
        architecture: ['x86', 'x64']
        target_framework: ['netcoreapp3.0', 'netcoreapp3.1', 'net5.0', 'net6.0', 'net7.0', 'net8.0']
        build_configuration: ['ReleaseFat', 'ReleaseThin']
    uses: ./.github/workflows/windows-dotnet.yml
    with:
      architecture: ${{ matrix.architecture }}
      target_framework: ${{ matrix.target_framework }}
      build_configuration: ${{ matrix.build_configuration }}

  windows-framework:
    name: Windows .NET Framework x86/x64
    strategy:
      matrix:
        architecture: ['x86', 'x64']
        target_framework: ['net35', 'net452', 'net472', 'net48']
        build_configuration: ['ReleaseFat', 'ReleaseThin']
    uses: ./.github/workflows/windows-framework.yml
    with:
      architecture: ${{ matrix.architecture }}
      target_framework: ${{ matrix.target_framework }}
      build_configuration: ${{ matrix.build_configuration }}

  windows-mono:
    name: Windows Mono x86/x64
    strategy:
      matrix:
        architecture: ['x86', 'x64']
        target_framework: ['net35', 'net452', 'net472', 'net48']
        build_configuration: ['ReleaseFat', 'ReleaseThin']
    uses: ./.github/workflows/windows-mono.yml
    with:
      architecture: ${{ matrix.architecture }}
      target_framework: ${{ matrix.target_framework }}
      build_configuration: ${{ matrix.build_configuration }}

  ubuntu-macos-x64-dotnet:
    name: Ubuntu/MacOS .NET x64
    strategy:
      matrix:
        image: [ { code: 'ubuntu-latest', name: 'ubuntu' }, { code: 'macos-13', name: 'macos' }]
        architecture: ['x64']
        target_framework: ['netcoreapp3.0', 'netcoreapp3.1', 'net5.0', 'net6.0', 'net7.0', 'net8.0']
        build_configuration: ['ReleaseFat', 'ReleaseThin']
    uses: ./.github/workflows/unix-dotnet.yml
    with:
      image: ${{ matrix.image.code }}
      image-name: ${{ matrix.image.name }}
      architecture: ${{ matrix.architecture }}
      target_framework: ${{ matrix.target_framework }}
      build_configuration: ${{ matrix.build_configuration }}

  ubuntu-macos-x64-mono:
    name: Ubuntu/MacOS Mono x64
    strategy:
      matrix:
        image: [ { code: 'ubuntu-latest', name: 'ubuntu' }, { code: 'macos-13', name: 'macos' }]
        architecture: ['x64']
        target_framework: ['net35', 'net452', 'net472', 'net48']
        build_configuration: ['ReleaseFat', 'ReleaseThin']
    uses: ./.github/workflows/unix-mono.yml
    with:
      image: ${{ matrix.image.code }}
      image-name: ${{ matrix.image.name }}
      architecture: ${{ matrix.architecture }}
      target_framework: ${{ matrix.target_framework }}
      build_configuration: ${{ matrix.build_configuration }}
      
  macos-arm64-dotnet:
    name: MacOS .NET arm64
    strategy:
      matrix:
        image: [ code: 'macos-14', name: 'macos' }]
        architecture: ['arm64']
        target_framework: ['net6.0', 'net7.0', 'net8.0']
        build_configuration: ['ReleaseFat', 'ReleaseThin']
    uses: ./.github/workflows/unix-dotnet.yml
    if: false
    with:
      image: ${{ matrix.image.code }}
      image-name: ${{ matrix.image.name }}
      architecture: ${{ matrix.architecture }}
      target_framework: ${{ matrix.target_framework }}
      build_configuration: ${{ matrix.build_configuration }}
