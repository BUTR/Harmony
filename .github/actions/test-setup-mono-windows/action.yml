name: Setup Mono Windows
description: Setup Mono for Windows using the latest version

inputs:
  architecture:
    description: 'The architecture to setup Mono for'
    required: true

outputs:
  path:
    description: 'The Mono path for the architecture'
    value: ${{ steps.set-path.outputs.path }}

runs:
  using: "composite"
  steps:
    - name: Setup Mono x86 Manually
      if: inputs.architecture == 'x86'
      run: |
        curl -L https://download.mono-project.com/archive/mono-latest-x86-preview.msi -o mono.msi;
        $file = "mono.msi" 
        $log = "install.log"
        $procMain = Start-Process "msiexec" "/i `"$file`" /qn /l*! `"$log`"" -NoNewWindow -PassThru
        $procLog = Start-Process "powershell" "Get-Content -Path `"$log`" -Wait" -NoNewWindow -PassThru
        $procMain.WaitForExit()
        $procLog.Kill()
      shell: pwsh
  
    - name: Setup Mono x64 Manually
      if: inputs.architecture == 'x64'
      run: |
        curl -L https://download.mono-project.com/archive/mono-latest-x64-preview.msi -o mono.msi;
        $file = "mono.msi" 
        $log = "install.log"
        $procMain = Start-Process "msiexec" "/i `"$file`" /qn /l*! `"$log`"" -NoNewWindow -PassThru
        $procLog = Start-Process "powershell" "Get-Content -Path `"$log`" -Wait" -NoNewWindow -PassThru
        $procMain.WaitForExit()
        $procLog.Kill()
      shell: pwsh

    - name: Get Program Files path for ${{inputs.architecture}}
      uses: ./.github/actions/get-program-files
      id: get-program-files
      with:
        architecture: ${{inputs.architecture}}

    - name: Set Mono path for ${{inputs.architecture}}
      id: set-path
      run: |
        if ('${{ inputs.architecture == 'x86'}}' -eq 'true') {
          $path = [System.Environment]::GetFolderPath([System.Environment+SpecialFolder]::ProgramFilesX86);
          "path=$path" | Out-File -FilePath $env:GITHUB_OUTPUT -Append;
        }
        if ('${{ inputs.architecture == 'x64'}}' -eq 'true') {
          $path = [System.Environment]::GetFolderPath([System.Environment+SpecialFolder]::ProgramFiles);
          "path=$path/Mono/bin/mono.exe" | Out-File -FilePath $env:GITHUB_OUTPUT -Append;
        }
      shell: pwsh
