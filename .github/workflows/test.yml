on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ${{ matrix.agent.image }}
    strategy:
      matrix:
        agent: [
          { os: windows, architecture: x86, image: windows-latest },
          { os: windows, architecture: x64, image: windows-latest },
          { os: ubuntu, architecture: x86, image: ubuntu-latest },
          { os: ubuntu, architecture: x64, image: ubuntu-latest },
          { os: macos, architecture: x86, image: macos-13-large },
          { os: macos, architecture: x64, image: macos-13-large },
          { os: macos, architecture: arm64, image: macos-13-xlarge }
        ]
        runtimeType: [
          framework: { name: net35 },
          framework: { name: net452 },
          framework: { name: net472 },
          framework: { name: net48 },
          
          dotnet: { name: netcoreapp3.0, version: '3.0.x' },
          dotnet: { name: netcoreapp3.1, version: '3.1.x' },
          dotnet: { name: net5.0, version: '5.0.x' },
          dotnet: { name: net6.0, version: '6.0.x' },
          dotnet: { name: net7.0, version: '7.0.x' },
          dotnet: { name: net8.0, version: '8.0.x' },
        ]
        buildConfiguration: [ReleaseFat, ReleaseThin]
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        if: ${{ matrix.runtimeType.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.runtimeType.dotnet.version }}

      - name: Setup Mono Windows x86
        if: ${{ matrix.runtimeType.mono && matrix.agent.os.windows && matrix.agent.architecture.x86 }}
        run: |
          curl -L https://download.mono-project.com/archive/6.12.0/windows-installer/mono-6.12.0-gtksharp-2.12.45-win32-0.msi -o mono.msi
          msiexec /i mono.msi /quiet
        shell: cmd

      - name: Setup Mono Windows x64
        if: ${{ matrix.runtimeType.mono && matrix.agent.os.windows && matrix.agent.architecture.x64 }}
        run: |
          curl -L https://download.mono-project.com/archive/6.12.0/windows-installer/mono-6.12.0.199-x64-0.msi -o mono.msi
          msiexec /i mono.msi /quiet
        shell: cmd


      - name: Build and Test .NET
        if: ${{ matrix.runtimeType.dotnet }}
        run: |
          dotnet test -c ${{ matrix.buildConfiguration }} Harmony.sln

      - name: Build and Test Mono Windows
        if: ${{ matrix.runtimeType.mono && matrix.agent.os.windows }}
        run: |
          if [ ${{ matrix.agent.architecture.x86 }} ]; then
            mono="%ProgramFiles(x86)%/Mono/bin/mono.exe"
          fi
          if [ ${{ matrix.agent.architecture.x64 }} ]; then
            mono="%ProgramFiles%/Mono/bin/mono.exe"
          fi
          
          vstest="$(vswhere.exe -latest -property installationPath)/Common7/IDE/CommonExtensions/Microsoft/TestWindow/vstest.console.exe"
          "$mono" "$vstest" "HarmonyTests/bin/Release/${{matrix.runtimeType.framework.name}}/HarmonyTests.dll" --Framework:${{matrix.runtimeType.framework.name}}

      - name: Build and Test
        if: ${{ matrix.runtimeType.mono && !matrix.agent.os.windows }}
        run: |
          echo "TODO";
