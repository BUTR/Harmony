name: Windows .NET

on:
  workflow_call:
    inputs:
      architecture:
        required: true
        type: string
      target_framework:
        required: true
        type: string
      build_configuration:
        required: true
        type: string

jobs:
  windows-net:
    name: .NET Windows-${{ inputs.architecture }} ${{ inputs.target_framework }} ${{ inputs.build_configuration }}
    runs-on: windows-latest
    continue-on-error: true
    env:
      run_settings_args: 'NUnit.DefaultTestNamePattern="{C}:{m}{a}" RunConfiguration.TargetPlatform=${{inputs.architecture}}'
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup .NET Windows x86
        if: inputs.architecture == 'x86'
        run: |
          Invoke-WebRequest 'https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1' -OutFile dotnet-install.ps1;
          $channel = '${{inputs.target_framework}}'.Replace('coreapp', '').Replace('net', '');
          .\dotnet-install.ps1 -Channel $channel -Architecture x86 -Runtime dotnet -InstallDir "${Env:ProgramFiles(x86)}\dotnet" -NoPath
        shell: pwsh
        
      - name: Setup .NET Windows x64
        if: inputs.architecture == 'x64'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{inputs.target_framework}}

      - name: Build
        run: |
          dotnet build -c ${{inputs.build_configuration}} --framework ${{inputs.target_framework}} Harmony.sln

      - name: Test .NET
        run: |
          dotnet test Harmony.sln --no-build --configuration ${{inputs.build_configuration}} --framework ${{inputs.target_framework}} --logger "console;verbosity=normal" --blame -- ${{inputs.run_settings_args}}
